name: ci-test

on:
  # Push時にビルド
  push:
    branches-ignore:
      - dependabot/**
  
  # プルリク時にビルド
  pull_request:
    branches: [ main ]
  
  # ブランチマージ時にビルド (mainブランチへのpushで対応)
  workflow_dispatch:

env:
  PROJECT_PATH: 'src/Aivis.Net.csproj'
  TEST_PATH: 'tests/Aivis.Tests.csproj'

jobs:
  format-check:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        dotnet:
          - version: '8.0.x'
          - version: '9.0.x'
        lib: 
          - name: 'Aivis.NET Lib'
            folder: 'src/Aivis.Net.csproj'
        sample:
          - name: 'sample: Contents'
            folder: 'sample/Contents/Aivis.Sample.Contents.csproj'
          - name: 'sample: StreamPlay'
            folder: 'sample/StreamPlay/Aivis.Sample.StreamPlay.csproj'
          - name: 'sample: SearchModels'
            folder: 'sample/SearchModels/Aivis.Sample.SearchModels.csproj'
          - name: 'sample: NAudio'
            folder: 'sample/NAudio/Aivis.Sample.NAudio.csproj'
        tests:
          - name: 'Aivis.NET Test'
            folder: 'tests/Aivis.Tests.csproj'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET ${{ matrix.dotnet.version }}
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ matrix.dotnet.version }}

      - name: Install dotnet-format
        run: dotnet tool install --global dotnet-format

      - name: format ${{ matrix.lib.name }}
        run: dotnet format ${{ matrix.lib.folder }} --verify-no-changes 

      - name: format ${{ matrix.tests.name }}
        run: dotnet format ${{ matrix.tests.folder }} --verify-no-changes 

      - name: format ${{ matrix.sample.name }}
        run: dotnet format ${{ matrix.sample.folder }} --verify-no-changes 

  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        dotnet:
          - version: '8.0.x'
          - version: '9.0.x'
        lib: 
          - name: 'Aivis.NET Lib'
            folder: 'src/Aivis.Net.csproj'
        sample:
          - name: 'sample: Contents'
            folder: 'sample/Contents/Aivis.Sample.Contents.csproj'
          - name: 'sample: StreamPlay'
            folder: 'sample/StreamPlay/Aivis.Sample.StreamPlay.csproj'
          - name: 'sample: SearchModels'
            folder: 'sample/SearchModels/Aivis.Sample.SearchModels.csproj'
          - name: 'sample: NAudio'
            folder: 'sample/NAudio/Aivis.Sample.NAudio.csproj'
        tests:
          - name: 'Aivis.NET Test'
            folder: 'tests/Aivis.Tests.csproj'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup .NET ${{ matrix.dotnet.version }}
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ matrix.dotnet.version }}

      - name: Restore dependencies
        run: dotnet restore ${{ matrix.lib.folder }}
      - name: Build project  
        run: dotnet build ${{ matrix.lib.folder }} --no-restore --configuration Release

      - name: Restore dependencies for sample
        run: dotnet restore ${{ matrix.sample.folder }}
      - name: Build project for sample
        run: dotnet build ${{ matrix.sample.folder }} --no-restore --configuration Release

      - name: Restore dependencies for tests
        run: dotnet restore ${{ matrix.tests.folder }}
      - name: Build project for tests
        run: dotnet build ${{ matrix.tests.folder }} --no-restore --configuration Release
      - name: Run tests
        run: dotnet test ${{ matrix.tests.folder }} --no-build --configuration Release --verbosity normal

