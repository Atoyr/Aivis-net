name: publish nuget
on:
  release:
    types: [published]
  workflow_dispatch: 
    inputs:
      tag:
        description: 'Tag to use (e.g., v1.2.3). If empty, uses latest tag.'
        required: false
        type: string

env:
  PROJECT_PATH: 'src/Aivis.Net.csproj'
  ARTIFACT_STAGING_DIRECTORY: "artifacts"
  REPOSITORY_URL: https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json
jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET 8
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Setup .NET 9
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Extract version from tag
        id: version
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            if [ -n "${{ github.event.inputs.tag }}" ]; then
              # 入力されたタグを使用
              TAG_NAME="${{ github.event.inputs.tag }}"
              echo "Using input tag: $TAG_NAME"
            fi
          else
            # タグpushの場合、そのタグを使用
            TAG_NAME="${GITHUB_REF##*/}"
          fi

          # タグが取得できない場合のエラーハンドリング
          if [ -z "$TAG_NAME" ]; then
            echo "Error: No tag found"
            exit 1
          fi

          VERSION="${TAG_NAME#v}"                  # remove leading 'v'
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Restore
        run: dotnet restore ${{ env.PROJECT_PATH }}

      - name: Build
        run: dotnet build ${{ env.PROJECT_PATH }} --configuration Release --no-restore

      - name: Unit Test
        run: dotnet test ${{ env.PROJECT_PATH }} --no-build --configuration Release --verbosity normal

      - name: Pack the NuGet package
        run: dotnet pack ${{ env.PROJECT_PATH }} --no-restore --configuration Release --no-build --output ${{ env.ARTIFACT_STAGING_DIRECTORY }} -p:Version=${{ steps.version.outputs.version }}

      - name: Publish Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Aivis-NET
          path: ${{ env.ARTIFACT_STAGING_DIRECTORY }}/*

  publish:
    name: Publish
    runs-on: ubuntu-latest
    needs: [build]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET 9
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: Aivis-NET
          path: ${{ env.ARTIFACT_STAGING_DIRECTORY }}

      - name: Set API Keys
        run: |
          dotnet nuget add source --username Atoyr --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name github ${{ env.REPOSITORY_URL }}

      - name: Publish to NuGet
        run: nuget push "${{ env.ARTIFACT_STAGING_DIRECTORY }}/*.nupkg" -source https://api.nuget.org/v3/index.json --api-key ${{ secrets.NUGET_API_KEY }} --skip-duplicate

      - name: Publish to GitHub Packages
        run: nuget push "${{ env.ARTIFACT_STAGING_DIRECTORY }}/*.nupkg" -source ${{ env.REPOSITORY_URL }} --api-key ${{ secrets.GITHUB_TOKEN }} --skip-duplicate
